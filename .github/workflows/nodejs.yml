name: Node.js CI

on:
  push:
    branches:
      - main

jobs:
  builds:
    runs-on: ubuntu-20.04

    strategy:
      matrix:
        node-version: [15.x]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Load caches
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install node modules
        run: npm install
      
      - name: Test
        run: npm test
        env:
            AUTH_HASH: ${{ secrets.AUTH_HASH }}
            AUTH_KEY: ${{ secrets.AUTH_KEY }}
            AUTH_MAX_AGE: ${{ secrets.AUTH_MAX_AGE }}
            DB_DB: ${{ secrets.DB_DB }}
            DB_HOST: ${{ secrets.DB_HOST }}
            DB_PASS: ${{ secrets.DB_PASS }}
            DB_PORT: ${{ secrets.DB_PORT }}
            DB_USER: ${{ secrets.DB_USER }}
            LIMITER_DELAY: ${{ secrets.LIMITER_DELAY }}
            LIMITER_MAX: ${{ secrets.LIMITER_MAX }}
            LIMITER_RETRY: ${{ secrets.LIMITER_RETRY }}
            SERVER_PORT: ${{ secrets.SERVER_PORT }}
        
      - name: Build
        run: npm run build
      
      - name: Deploy
        run: |
            echo -e $KEY >__TEMP_KEY
            chmod 600 __TEMP_KEY
            scp -o StrictHostKeyChecking=no -i __TEMP_KEY -P $PORT $SOURCE $USER@$HOST:$TARGET
          working-directory: ./dist
        env:
          HOST: ${{ secrets.DEPLOY_HOST }}
          USER: ${{ secrets.DEPLOY_USER }}
          PORT: ${{ secrets.DEPLOY_PORT }}
          KEY: ${{ secrets.DEPLOY_KEY }}
          SOURCE: "wkblog-server.js"
          TARGET: "${{ secrets.DEPLOY_TARGET }}"
        